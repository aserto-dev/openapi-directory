{
  "components": {
    "schemas": {
      "protobufAny": {
        "additionalProperties": {},
        "properties": {
          "@type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "protobufNullValue": {
        "default": "NULL_VALUE",
        "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value.",
        "enum": [
          "NULL_VALUE"
        ],
        "type": "string"
      },
      "rpcStatus": {
        "properties": {
          "code": {
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "items": {
              "$ref": "#/components/schemas/protobufAny"
            },
            "type": "array"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "v3CheckPermissionRequest": {
        "properties": {
          "object_id": {
            "title": "object identifier",
            "type": "string"
          },
          "object_type": {
            "title": "object type",
            "type": "string"
          },
          "permission": {
            "title": "permission name",
            "type": "string"
          },
          "subject_id": {
            "title": "subject identifier",
            "type": "string"
          },
          "subject_type": {
            "title": "subject type",
            "type": "string"
          },
          "trace": {
            "title": "collect trace information",
            "type": "boolean"
          }
        },
        "required": [
          "object_type",
          "object_id",
          "permission",
          "subject_type",
          "subject_id"
        ],
        "type": "object"
      },
      "v3CheckPermissionResponse": {
        "properties": {
          "check": {
            "title": "check result",
            "type": "boolean"
          },
          "trace": {
            "items": {
              "type": "string"
            },
            "title": "trace information",
            "type": "array"
          }
        },
        "type": "object"
      },
      "v3CheckRelationRequest": {
        "properties": {
          "object_id": {
            "title": "object identifier",
            "type": "string"
          },
          "object_type": {
            "title": "object type",
            "type": "string"
          },
          "relation": {
            "title": "relation name",
            "type": "string"
          },
          "subject_id": {
            "title": "subject identifier",
            "type": "string"
          },
          "subject_type": {
            "title": "subject type",
            "type": "string"
          },
          "trace": {
            "title": "collect trace information",
            "type": "boolean"
          }
        },
        "required": [
          "object_type",
          "object_id",
          "relation",
          "subject_type",
          "subject_id"
        ],
        "type": "object"
      },
      "v3CheckRelationResponse": {
        "properties": {
          "check": {
            "title": "check result",
            "type": "boolean"
          },
          "trace": {
            "items": {
              "type": "string"
            },
            "title": "trace information",
            "type": "array"
          }
        },
        "type": "object"
      },
      "v3DeleteObjectResponse": {
        "properties": {
          "result": {
            "title": "empty result",
            "type": "object"
          }
        },
        "type": "object"
      },
      "v3DeleteRelationResponse": {
        "properties": {
          "result": {
            "title": "empty result",
            "type": "object"
          }
        },
        "type": "object"
      },
      "v3ExportResponse": {
        "properties": {
          "object": {
            "$ref": "#/components/schemas/v3Object"
          },
          "relation": {
            "$ref": "#/components/schemas/v3Relation"
          }
        },
        "type": "object"
      },
      "v3GetGraphRequest": {
        "properties": {
          "anchor_id": {
            "title": "anchor identifier",
            "type": "string"
          },
          "anchor_type": {
            "title": "anchor type",
            "type": "string"
          },
          "object_id": {
            "title": "object identifier",
            "type": "string"
          },
          "object_type": {
            "title": "object type",
            "type": "string"
          },
          "relation": {
            "title": "relation name",
            "type": "string"
          },
          "subject_id": {
            "title": "subject identifier",
            "type": "string"
          },
          "subject_relation": {
            "title": "subject relation",
            "type": "string"
          },
          "subject_type": {
            "title": "subject type",
            "type": "string"
          }
        },
        "required": [
          "anchor_type",
          "anchor_id"
        ],
        "type": "object"
      },
      "v3GetGraphResponse": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/v3ObjectDependency"
            },
            "title": "dependency graph",
            "type": "array"
          }
        },
        "type": "object"
      },
      "v3GetManifestResponse": {
        "properties": {
          "result": {
            "$ref": "#/components/schemas/v3Manifest"
          }
        },
        "type": "object"
      },
      "v3GetObjectManyResponse": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/v3Object"
            },
            "title": "array of object instances",
            "type": "array"
          }
        },
        "type": "object"
      },
      "v3GetObjectResponse": {
        "properties": {
          "page": {
            "$ref": "#/components/schemas/v3PaginationResponse"
          },
          "relations": {
            "items": {
              "$ref": "#/components/schemas/v3Relation"
            },
            "title": "object relations",
            "type": "array"
          },
          "result": {
            "$ref": "#/components/schemas/v3Object"
          }
        },
        "type": "object"
      },
      "v3GetObjectsResponse": {
        "properties": {
          "page": {
            "$ref": "#/components/schemas/v3PaginationResponse"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/v3Object"
            },
            "title": "array of object instances",
            "type": "array"
          }
        },
        "type": "object"
      },
      "v3GetRelationResponse": {
        "properties": {
          "objects": {
            "additionalProperties": {
              "$ref": "#/components/schemas/v3Object"
            },
            "title": "map of materialized relation objects",
            "type": "object"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/v3Relation"
            },
            "title": "array of relation instances",
            "type": "array"
          }
        },
        "type": "object"
      },
      "v3GetRelationsRequest": {
        "properties": {
          "object_id": {
            "title": "object identifier",
            "type": "string"
          },
          "object_type": {
            "title": "object type",
            "type": "string"
          },
          "page": {
            "$ref": "#/components/schemas/v3PaginationRequest"
          },
          "relation": {
            "title": "relation name",
            "type": "string"
          },
          "subject_id": {
            "title": "subject identifier",
            "type": "string"
          },
          "subject_relation": {
            "title": "optional subject relation name",
            "type": "string"
          },
          "subject_type": {
            "title": "subject type",
            "type": "string"
          }
        },
        "type": "object"
      },
      "v3GetRelationsResponse": {
        "properties": {
          "page": {
            "$ref": "#/components/schemas/v3PaginationResponse"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/v3Relation"
            },
            "title": "array of relation instances",
            "type": "array"
          }
        },
        "type": "object"
      },
      "v3ImportCounter": {
        "properties": {
          "delete": {
            "format": "uint64",
            "title": "number of messages with OPCODE_DELETE",
            "type": "string"
          },
          "error": {
            "format": "uint64",
            "title": "number of messages resulting in error",
            "type": "string"
          },
          "recv": {
            "format": "uint64",
            "title": "number of messages received",
            "type": "string"
          },
          "set": {
            "format": "uint64",
            "title": "number of messages with OPCODE_SET",
            "type": "string"
          }
        },
        "type": "object"
      },
      "v3ImportResponse": {
        "properties": {
          "object": {
            "$ref": "#/components/schemas/v3ImportCounter"
          },
          "relation": {
            "$ref": "#/components/schemas/v3ImportCounter"
          }
        },
        "type": "object"
      },
      "v3Manifest": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "created at timestamp (UTC)",
            "type": "string"
          },
          "data": {
            "format": "byte",
            "title": "manifest data",
            "type": "string"
          },
          "etag": {
            "title": "object instance etag",
            "type": "string"
          },
          "name": {
            "title": "manifest name (unique, lc-string)",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "last updated timestamp (UTC)",
            "type": "string"
          },
          "version": {
            "title": "manifest version (semver)",
            "type": "string"
          }
        },
        "required": [
          "name",
          "version",
          "data"
        ],
        "type": "object"
      },
      "v3Object": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "created at timestamp (UTC)",
            "type": "string"
          },
          "display_name": {
            "title": "display name object",
            "type": "string"
          },
          "etag": {
            "title": "object instance etag",
            "type": "string"
          },
          "id": {
            "title": "external object identifier (cs-string)",
            "type": "string"
          },
          "properties": {
            "title": "property bag",
            "type": "object"
          },
          "type": {
            "title": "object type name",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "last updated timestamp (UTC)",
            "type": "string"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "type": "object"
      },
      "v3ObjectDependency": {
        "properties": {
          "depth": {
            "format": "int32",
            "readOnly": true,
            "title": "dependency depth",
            "type": "integer"
          },
          "is_cycle": {
            "readOnly": true,
            "title": "dependency cycle",
            "type": "boolean"
          },
          "object_id": {
            "readOnly": true,
            "title": "object identifier",
            "type": "string"
          },
          "object_type": {
            "readOnly": true,
            "title": "object type",
            "type": "string"
          },
          "path": {
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "title": "dependency path",
            "type": "array"
          },
          "relation": {
            "readOnly": true,
            "title": "object relation name",
            "type": "string"
          },
          "subject_id": {
            "readOnly": true,
            "title": "subject identifier",
            "type": "string"
          },
          "subject_relation": {
            "readOnly": true,
            "title": "optional subject relation name",
            "type": "string"
          },
          "subject_type": {
            "readOnly": true,
            "title": "subject type",
            "type": "string"
          }
        },
        "type": "object"
      },
      "v3ObjectIdentifier": {
        "properties": {
          "object_id": {
            "title": "object identifier (cs-string)",
            "type": "string"
          },
          "object_type": {
            "title": "object type (lc-string)",
            "type": "string"
          }
        },
        "required": [
          "object_type",
          "object_id"
        ],
        "title": "Object identifier",
        "type": "object"
      },
      "v3Opcode": {
        "default": "OPCODE_UNKNOWN",
        "enum": [
          "OPCODE_UNKNOWN",
          "OPCODE_SET",
          "OPCODE_DELETE"
        ],
        "type": "string"
      },
      "v3PaginationRequest": {
        "properties": {
          "size": {
            "format": "int32",
            "title": "requested page size, valid value between 1-100 rows (default 100)",
            "type": "integer"
          },
          "token": {
            "title": "pagination start token, default \"\"",
            "type": "string"
          }
        },
        "title": "Pagination request",
        "type": "object"
      },
      "v3PaginationResponse": {
        "properties": {
          "next_token": {
            "readOnly": true,
            "title": "next page token, when empty there are no more pages to fetch",
            "type": "string"
          }
        },
        "title": "Pagination response",
        "type": "object"
      },
      "v3Relation": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "created at timestamp (UTC)",
            "type": "string"
          },
          "etag": {
            "title": "object instance etag",
            "type": "string"
          },
          "object_id": {
            "title": "object identifier",
            "type": "string"
          },
          "object_type": {
            "title": "object type",
            "type": "string"
          },
          "relation": {
            "title": "object relation name",
            "type": "string"
          },
          "subject_id": {
            "title": "subject identifier",
            "type": "string"
          },
          "subject_relation": {
            "title": "optional subject relation name",
            "type": "string"
          },
          "subject_type": {
            "title": "subject type",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "readOnly": true,
            "title": "last updated timestamp (UTC)",
            "type": "string"
          }
        },
        "required": [
          "object_type",
          "object_id",
          "relation",
          "subject_type",
          "subject_id"
        ],
        "type": "object"
      },
      "v3SetManifestResponse": {
        "properties": {
          "result": {
            "$ref": "#/components/schemas/v3Manifest"
          }
        },
        "type": "object"
      },
      "v3SetObjectRequest": {
        "properties": {
          "object": {
            "$ref": "#/components/schemas/v3Object"
          }
        },
        "type": "object"
      },
      "v3SetObjectResponse": {
        "properties": {
          "result": {
            "$ref": "#/components/schemas/v3Object"
          }
        },
        "type": "object"
      },
      "v3SetRelationRequest": {
        "properties": {
          "relation": {
            "$ref": "#/components/schemas/v3Relation"
          }
        },
        "type": "object"
      },
      "v3SetRelationResponse": {
        "properties": {
          "result": {
            "$ref": "#/components/schemas/v3Relation"
          }
        },
        "type": "object"
      }
    }
  },
  "externalDocs": {
    "description": "API documentation",
    "url": "https://docs.aserto.com"
  },
  "info": {
    "contact": {
      "email": "support@aserto.com",
      "name": "API Support",
      "url": "https://aserto.com/support"
    },
    "description": "Directory service",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://aserto.com/terms/",
    "title": "Directory",
    "version": "0.21.5-20230722212201.6.gd53b6ba2-dirty"
  },
  "openapi": "3.0.3",
  "paths": {
    "/api/v3/directory/check/permission": {
      "post": {
        "description": "Returns check permission outcome.",
        "operationId": "directory.v3.check.permission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v3CheckPermissionRequest"
              }
            }
          },
          "required": true,
          "x-originalParamName": "body"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3CheckPermissionResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "security": [
          {
            "DirectoryAPIKey": [],
            "TenantID": []
          }
        ],
        "summary": "Check permission",
        "tags": [
          "directory"
        ]
      }
    },
    "/api/v3/directory/check/relation": {
      "post": {
        "description": "Returns check relation outcome.",
        "operationId": "directory.v3.check.relation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v3CheckRelationRequest"
              }
            }
          },
          "required": true,
          "x-originalParamName": "body"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3CheckRelationResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "security": [
          {
            "DirectoryAPIKey": [],
            "TenantID": []
          }
        ],
        "summary": "Check relation",
        "tags": [
          "directory"
        ]
      }
    },
    "/api/v3/directory/graph": {
      "post": {
        "description": "Returns object graph from anchor to subject or object.",
        "operationId": "directory.v3.graph",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v3GetGraphRequest"
              }
            }
          },
          "required": true,
          "x-originalParamName": "body"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3GetGraphResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "security": [
          {
            "DirectoryAPIKey": [],
            "TenantID": []
          }
        ],
        "summary": "Get graph",
        "tags": [
          "directory"
        ]
      }
    },
    "/api/v3/directory/object": {
      "post": {
        "description": "Set object.",
        "operationId": "directory.v3.object.set",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v3SetObjectRequest"
              }
            }
          },
          "required": true,
          "x-originalParamName": "body"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3SetObjectResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "security": [
          {
            "DirectoryAPIKey": [],
            "TenantID": []
          }
        ],
        "summary": "Set object",
        "tags": [
          "directory"
        ]
      }
    },
    "/api/v3/directory/object/{object_type}/{object_id}": {
      "delete": {
        "description": "Delete object.",
        "operationId": "directory.v3.object.delete",
        "parameters": [
          {
            "description": "object type",
            "in": "path",
            "name": "object_type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "object identifier",
            "in": "path",
            "name": "object_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "delete object relations, both object and subject relations.",
            "in": "query",
            "name": "with_relations",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3DeleteObjectResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "security": [
          {
            "DirectoryAPIKey": [],
            "TenantID": []
          }
        ],
        "summary": "Delete object",
        "tags": [
          "directory"
        ]
      },
      "get": {
        "description": "Returns single object instance, optionally with relations.",
        "operationId": "directory.v3.object.get",
        "parameters": [
          {
            "description": "object type name (lc-string)",
            "in": "path",
            "name": "object_type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "object identifier (cs-string)",
            "in": "path",
            "name": "object_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "materialize the object relations objects",
            "in": "query",
            "name": "with_relations",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "requested page size, valid value between 1-100 rows (default 100)",
            "in": "query",
            "name": "page.size",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "pagination start token, default \"\"",
            "in": "query",
            "name": "page.token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3GetObjectResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "security": [
          {
            "DirectoryAPIKey": [],
            "TenantID": []
          }
        ],
        "summary": "Get object instance",
        "tags": [
          "directory"
        ]
      }
    },
    "/api/v3/directory/objects": {
      "get": {
        "description": "Returns list of object instances.",
        "operationId": "directory.v3.objects.list",
        "parameters": [
          {
            "description": "object type name (lc-string)",
            "in": "query",
            "name": "object_type",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "requested page size, valid value between 1-100 rows (default 100)",
            "in": "query",
            "name": "page.size",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "pagination start token, default \"\"",
            "in": "query",
            "name": "page.token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3GetObjectsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "security": [
          {
            "DirectoryAPIKey": [],
            "TenantID": []
          }
        ],
        "summary": "List object instances",
        "tags": [
          "directory"
        ]
      }
    },
    "/api/v3/directory/relation": {
      "post": {
        "description": "Set relation.",
        "operationId": "directory.v3.relation.set",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v3SetRelationRequest"
              }
            }
          },
          "required": true,
          "x-originalParamName": "body"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3SetRelationResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "security": [
          {
            "DirectoryAPIKey": [],
            "TenantID": []
          }
        ],
        "summary": "Set relation",
        "tags": [
          "directory"
        ]
      }
    },
    "/api/v3/directory/relation/{object_type}/{object_id}/{relation}/{subject_type}/{subject_id}/{subject_relation}": {
      "delete": {
        "description": "Delete relation.",
        "operationId": "directory.v3.relation.delete",
        "parameters": [
          {
            "description": "object type",
            "in": "path",
            "name": "object_type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "object identifier",
            "in": "path",
            "name": "object_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "object relation name",
            "in": "path",
            "name": "relation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "subject type",
            "in": "path",
            "name": "subject_type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "subject identifier",
            "in": "path",
            "name": "subject_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional subject relation name",
            "in": "path",
            "name": "subject_relation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3DeleteRelationResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "security": [
          {
            "DirectoryAPIKey": [],
            "TenantID": []
          }
        ],
        "summary": "Delete relation",
        "tags": [
          "directory"
        ]
      },
      "get": {
        "description": "Returns single relation instance, optionally with objects.",
        "operationId": "directory.v3.relation.get",
        "parameters": [
          {
            "description": "object type",
            "in": "path",
            "name": "object_type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "object identifier",
            "in": "path",
            "name": "object_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "relation name",
            "in": "path",
            "name": "relation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "subject type",
            "in": "path",
            "name": "subject_type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "subject identifier",
            "in": "path",
            "name": "subject_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "optional subject relation name",
            "in": "path",
            "name": "subject_relation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "materialize relation objects",
            "in": "query",
            "name": "with_objects",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3GetRelationResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "security": [
          {
            "DirectoryAPIKey": [],
            "TenantID": []
          }
        ],
        "summary": "Get relation instance",
        "tags": [
          "directory"
        ]
      }
    },
    "/api/v3/directory/relations": {
      "post": {
        "description": "Returns list of relation instances.",
        "operationId": "directory.v3.relations.list",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v3GetRelationsRequest"
              }
            }
          },
          "required": true,
          "x-originalParamName": "body"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v3GetRelationsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "security": [
          {
            "DirectoryAPIKey": [],
            "TenantID": []
          }
        ],
        "summary": "List relations instances",
        "tags": [
          "directory"
        ]
      }
    }
  },
  "servers": [
    {
      "description": "Aserto Directory service",
      "url": "https://directory.prod.aserto.com"
    },
    {
      "description": "Local directory service using Topaz",
      "url": "https://localhost:{port}",
      "variables": {
        "port": {
          "default": "9393",
          "enum": [
            "8383",
            "9393"
          ]
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Exporter"
    }
  ]
}
