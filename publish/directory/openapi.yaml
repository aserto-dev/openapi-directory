openapi: 3.0.3
components:
  schemas:
    protobufAny:
      type: object
      properties:
        '@type':
          type: string
      additionalProperties:
        has: null
        schema: {}
    protobufNullValue:
      type: string
      description: |-
        `NullValue` is a singleton enumeration to represent the null value for the
        `Value` type union.

         The JSON representation for `NullValue` is JSON `null`.

         - NULL_VALUE: Null value.
      enum:
        - NULL_VALUE
      default: NULL_VALUE
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        details:
          type: array
          items:
            $ref: '#/components/schemas/protobufAny'
        message:
          type: string
    v3CheckPermissionRequest:
      type: object
      properties:
        object_id:
          type: string
        object_type:
          type: string
        permission:
          type: string
        subject_id:
          type: string
        subject_type:
          type: string
        trace:
          type: boolean
    v3CheckPermissionResponse:
      type: object
      properties:
        check:
          type: boolean
        trace:
          type: array
          items:
            type: string
    v3CheckRelationRequest:
      type: object
      properties:
        object_id:
          type: string
        object_type:
          type: string
        relation:
          type: string
        subject_id:
          type: string
        subject_type:
          type: string
        trace:
          type: boolean
    v3CheckRelationResponse:
      type: object
      properties:
        check:
          type: boolean
        trace:
          type: array
          items:
            type: string
    v3DeleteManifestResponse:
      type: object
      properties:
        result:
          type: object
    v3DeleteObjectResponse:
      type: object
      properties:
        result:
          type: object
    v3DeleteRelationResponse:
      type: object
      properties:
        result:
          type: object
    v3ExportResponse:
      type: object
      properties:
        object:
          $ref: '#/components/schemas/v3Object'
        relation:
          $ref: '#/components/schemas/v3Relation'
    v3GetGraphRequest:
      type: object
      properties:
        anchor_id:
          type: string
        anchor_type:
          type: string
        object_id:
          type: string
        object_type:
          type: string
        relation:
          type: string
        subject_id:
          type: string
        subject_type:
          type: string
    v3GetGraphResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/v3ObjectDependency'
    v3GetManifestResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/v3Manifest'
    v3GetObjectManyResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/v3Object'
    v3GetObjectResponse:
      type: object
      properties:
        incoming:
          type: array
          items:
            $ref: '#/components/schemas/v3Relation'
        outgoing:
          type: array
          items:
            $ref: '#/components/schemas/v3Relation'
        result:
          $ref: '#/components/schemas/v3Object'
    v3GetObjectTypeResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/v3ObjectType'
    v3GetObjectTypesResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/v3PaginationResponse'
        results:
          type: array
          items:
            $ref: '#/components/schemas/v3ObjectType'
    v3GetObjectsResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/v3PaginationResponse'
        results:
          type: array
          items:
            $ref: '#/components/schemas/v3Object'
    v3GetPermissionResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/v3Permission'
    v3GetPermissionsResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/v3PaginationResponse'
        results:
          type: array
          items:
            $ref: '#/components/schemas/v3Permission'
    v3GetRelationResponse:
      type: object
      properties:
        objects:
          type: object
          additionalProperties:
            has: null
            schema:
              $ref: '#/components/schemas/v3Object'
        results:
          type: array
          items:
            $ref: '#/components/schemas/v3Relation'
    v3GetRelationTypeResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/v3RelationType'
    v3GetRelationTypesResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/v3PaginationResponse'
        results:
          type: array
          items:
            $ref: '#/components/schemas/v3RelationType'
    v3GetRelationsResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/v3PaginationResponse'
        results:
          type: array
          items:
            $ref: '#/components/schemas/v3Relation'
    v3ImportCounter:
      type: object
      properties:
        delete:
          type: string
          format: uint64
        error:
          type: string
          format: uint64
        recv:
          type: string
          format: uint64
        set:
          type: string
          format: uint64
    v3ImportResponse:
      type: object
      properties:
        object:
          $ref: '#/components/schemas/v3ImportCounter'
        relation:
          $ref: '#/components/schemas/v3ImportCounter'
    v3Manifest:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        data:
          type: string
          format: byte
        etag:
          type: string
        name:
          type: string
        schema_version:
          type: string
        updated_at:
          type: string
          format: date-time
        version:
          type: string
    v3Object:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        display_name:
          type: string
        etag:
          type: string
        id:
          type: string
        properties:
          type: object
        type:
          type: string
        updated_at:
          type: string
          format: date-time
    v3ObjectDependency:
      type: object
      properties:
        depth:
          type: integer
          format: int32
        is_cycle:
          type: boolean
        object_id:
          type: string
        object_type:
          type: string
        path:
          type: array
          items:
            type: string
        relation:
          type: string
        subject_id:
          type: string
        subject_relation:
          type: string
        subject_type:
          type: string
    v3ObjectIdentifier:
      type: object
      title: Object identifier
      properties:
        object_id:
          type: string
        object_type:
          type: string
    v3ObjectType:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        display_name:
          type: string
        etag:
          type: string
        is_subject:
          type: boolean
        name:
          type: string
        ordinal:
          type: integer
          format: int32
        schema:
          type: object
        status:
          type: integer
          format: int64
        updated_at:
          type: string
          format: date-time
    v3Opcode:
      type: string
      enum:
        - OPCODE_UNKNOWN
        - OPCODE_SET
        - OPCODE_DELETE
      default: OPCODE_UNKNOWN
    v3PaginationRequest:
      type: object
      title: Pagination request
      properties:
        size:
          type: integer
          format: int32
        token:
          type: string
    v3PaginationResponse:
      type: object
      title: Pagination response
      properties:
        next_token:
          type: string
    v3Permission:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        display_name:
          type: string
        etag:
          type: string
        name:
          type: string
        updated_at:
          type: string
          format: date-time
    v3Relation:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        etag:
          type: string
        object_id:
          type: string
        object_type:
          type: string
        relation:
          type: string
        subject_id:
          type: string
        subject_relation:
          type: string
        subject_type:
          type: string
        updated_at:
          type: string
          format: date-time
    v3RelationType:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
        display_name:
          type: string
        etag:
          type: string
        name:
          type: string
        object_type:
          type: string
        ordinal:
          type: integer
          format: int32
        permissions:
          type: array
          items:
            type: string
        status:
          type: integer
          format: int64
        unions:
          type: array
          items:
            type: string
        updated_at:
          type: string
          format: date-time
    v3SetManifestResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/v3Manifest'
    v3SetObjectRequest:
      type: object
      properties:
        object:
          $ref: '#/components/schemas/v3Object'
    v3SetObjectResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/v3Object'
    v3SetRelationRequest:
      type: object
      properties:
        relation:
          $ref: '#/components/schemas/v3Relation'
    v3SetRelationResponse:
      type: object
      properties:
        object_id:
          type: string
        object_type:
          type: string
        relation:
          type: string
        subject_id:
          type: string
        subject_relation:
          type: string
        subject_type:
          type: string
info:
  title: Directory
  description: Directory service
  termsOfService: https://aserto.com/terms/
  contact:
    name: API Support
    url: https://aserto.com/support
    email: support@aserto.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.0-20230705151224.0.ge0ac40f2
paths:
  /api/v3/directory/check/permission:
    post:
      tags:
        - directory
      summary: Check permission
      description: Returns check permission outcome.
      operationId: directory.v3.check.permission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v3CheckPermissionRequest'
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3CheckPermissionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
  /api/v3/directory/check/relation:
    post:
      tags:
        - directory
      summary: Check relation
      description: Returns check relation outcome.
      operationId: directory.v3.check.relation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v3CheckRelationRequest'
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3CheckRelationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
  /api/v3/directory/graph:
    post:
      tags:
        - directory
      summary: Get graph
      description: Returns object graph from anchor to subject or object.
      operationId: directory.v3.graph
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v3GetGraphRequest'
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3GetGraphResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
  /api/v3/directory/object:
    put:
      tags:
        - directory
      summary: Set object
      description: Set object.
      operationId: directory.v3.object.set
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v3SetObjectRequest'
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3SetObjectResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
  /api/v3/directory/object/{object_type}/{object_id}:
    delete:
      tags:
        - directory
      summary: Delete object
      description: Delete object.
      operationId: directory.v3.object.delete
      parameters:
        - name: object_type
          in: path
          required: true
          schema:
            type: string
        - name: object_id
          in: path
          required: true
          schema:
            type: string
        - name: with_relations
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3DeleteObjectResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
    get:
      tags:
        - directory
      summary: Get object instance
      description: Returns single object instance, optionally with relations.
      operationId: directory.v3.object.get
      parameters:
        - name: object_type
          in: path
          required: true
          schema:
            type: string
        - name: object_id
          in: path
          required: true
          schema:
            type: string
        - name: with_relations
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3GetObjectResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
  /api/v3/directory/objects/{object_type}:
    get:
      tags:
        - directory
      summary: List object instances
      description: Returns list of object instances.
      operationId: directory.v3.objects.get
      parameters:
        - name: object_type
          in: path
          required: true
          schema:
            type: string
        - name: page.size
          in: query
          schema:
            type: integer
            format: int32
        - name: page.token
          in: query
          schema:
            type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3GetObjectsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
  /api/v3/directory/relation:
    put:
      tags:
        - directory
      summary: Set relation
      description: Set relation.
      operationId: directory.v3.relation.set
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v3SetRelationRequest'
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3SetRelationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
  /api/v3/directory/relation/{object_type}/{object_id}/{relation}/{subject_type}/{subject_id}/{subject_relation}:
    delete:
      tags:
        - directory
      summary: Delete relation
      description: Delete relation.
      operationId: directory.v3.relation.delete
      parameters:
        - name: object_type
          in: path
          required: true
          schema:
            type: string
        - name: object_id
          in: path
          required: true
          schema:
            type: string
        - name: relation
          in: path
          required: true
          schema:
            type: string
        - name: subject_type
          in: path
          required: true
          schema:
            type: string
        - name: subject_id
          in: path
          required: true
          schema:
            type: string
        - name: subject_relation
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3DeleteRelationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
    get:
      tags:
        - directory
      summary: Get relation instance
      description: Returns single relation instance, optionally with objects.
      operationId: directory.v3.relation.get
      parameters:
        - name: object_type
          in: path
          required: true
          schema:
            type: string
        - name: object_id
          in: path
          required: true
          schema:
            type: string
        - name: relation
          in: path
          required: true
          schema:
            type: string
        - name: subject_type
          in: path
          required: true
          schema:
            type: string
        - name: subject_id
          in: path
          required: true
          schema:
            type: string
        - name: subject_relation
          in: path
          required: true
          schema:
            type: string
        - name: with_objects
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3GetRelationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
  /api/v3/directory/relations/object/{object_type}/{object_id}/{relation}/{subject_type}/{subject_id}/{subject_relation}:
    get:
      tags:
        - directory
      summary: List relations instances
      description: Returns list of relation instances.
      operationId: GetRelations
      parameters:
        - name: object_type
          in: path
          required: true
          schema:
            type: string
        - name: object_id
          in: path
          required: true
          schema:
            type: string
        - name: relation
          in: path
          required: true
          schema:
            type: string
        - name: subject_type
          in: path
          required: true
          schema:
            type: string
        - name: subject_id
          in: path
          required: true
          schema:
            type: string
        - name: subject_relation
          in: path
          required: true
          schema:
            type: string
        - name: page.size
          in: query
          schema:
            type: integer
            format: int32
        - name: page.token
          in: query
          schema:
            type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3GetRelationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
  /api/v3/directory/relations/subject/{subject_type}/{subject_id}/{subject_relation}/{object_type}/{object_id}/{relation}:
    get:
      tags:
        - directory
      summary: List relations instances
      description: Returns list of relation instances.
      operationId: GetRelations2
      parameters:
        - name: subject_type
          in: path
          required: true
          schema:
            type: string
        - name: subject_id
          in: path
          required: true
          schema:
            type: string
        - name: subject_relation
          in: path
          required: true
          schema:
            type: string
        - name: object_type
          in: path
          required: true
          schema:
            type: string
        - name: object_id
          in: path
          required: true
          schema:
            type: string
        - name: relation
          in: path
          required: true
          schema:
            type: string
        - name: page.size
          in: query
          schema:
            type: integer
            format: int32
        - name: page.token
          in: query
          schema:
            type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3GetRelationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
servers:
  - url: https://directory.prod.aserto.com
    description: Aserto Directory service
  - url: https://localhost:{port}
    description: Local directory service using Topaz
    variables:
      port:
        enum:
          - "9393"
        default: "9393"
tags:
  - name: Exporter
externalDocs:
  description: API documentation
  url: https://docs.aserto.com
