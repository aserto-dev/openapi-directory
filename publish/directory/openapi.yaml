openapi: 3.0.3
components:
  schemas:
    protobufAny:
      type: object
      properties:
        '@type':
          type: string
      additionalProperties:
        has: null
        schema: {}
    protobufNullValue:
      type: string
      description: |-
        `NullValue` is a singleton enumeration to represent the null value for the
        `Value` type union.

         The JSON representation for `NullValue` is JSON `null`.

         - NULL_VALUE: Null value.
      enum:
        - NULL_VALUE
      default: NULL_VALUE
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        details:
          type: array
          items:
            $ref: '#/components/schemas/protobufAny'
        message:
          type: string
    v3Body:
      type: object
      properties:
        data:
          type: string
          title: manifest content
          format: byte
    v3CheckPermissionRequest:
      type: object
      required:
        - object_type
        - object_id
        - permission
        - subject_type
        - subject_id
      properties:
        object_id:
          type: string
          title: object identifier
        object_type:
          type: string
          title: object type
        permission:
          type: string
          title: permission name
        subject_id:
          type: string
          title: subject identifier
        subject_type:
          type: string
          title: subject type
        trace:
          type: boolean
          title: collect trace information
    v3CheckPermissionResponse:
      type: object
      properties:
        check:
          type: boolean
          title: check result
        trace:
          type: array
          title: trace information
          items:
            type: string
    v3CheckRelationRequest:
      type: object
      required:
        - object_type
        - object_id
        - relation
        - subject_type
        - subject_id
      properties:
        object_id:
          type: string
          title: object identifier
        object_type:
          type: string
          title: object type
        relation:
          type: string
          title: relation name
        subject_id:
          type: string
          title: subject identifier
        subject_type:
          type: string
          title: subject type
        trace:
          type: boolean
          title: collect trace information
    v3CheckRelationResponse:
      type: object
      properties:
        check:
          type: boolean
          title: check result
        trace:
          type: array
          title: trace information
          items:
            type: string
    v3DeleteManifestResponse:
      type: object
      properties:
        result:
          type: object
          title: empty result
    v3DeleteObjectResponse:
      type: object
      properties:
        result:
          type: object
          title: empty result
    v3DeleteRelationResponse:
      type: object
      properties:
        result:
          type: object
          title: empty result
    v3ExportResponse:
      type: object
      properties:
        object:
          $ref: '#/components/schemas/v3Object'
        relation:
          $ref: '#/components/schemas/v3Relation'
    v3GetGraphResponse:
      type: object
      properties:
        results:
          type: array
          title: dependency graph
          items:
            $ref: '#/components/schemas/v3ObjectDependency'
    v3GetManifestResponse:
      type: object
      properties:
        body:
          $ref: '#/components/schemas/v3Body'
        metadata:
          $ref: '#/components/schemas/v3Metadata'
    v3GetObjectManyResponse:
      type: object
      properties:
        results:
          type: array
          title: array of object instances
          items:
            $ref: '#/components/schemas/v3Object'
    v3GetObjectResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/v3PaginationResponse'
        relations:
          type: array
          title: object relations
          items:
            $ref: '#/components/schemas/v3Relation'
        result:
          $ref: '#/components/schemas/v3Object'
    v3GetObjectsResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/v3PaginationResponse'
        results:
          type: array
          title: array of object instances
          items:
            $ref: '#/components/schemas/v3Object'
    v3GetRelationResponse:
      type: object
      properties:
        objects:
          type: object
          title: map of materialized relation objects
          additionalProperties:
            has: null
            schema:
              $ref: '#/components/schemas/v3Object'
        result:
          $ref: '#/components/schemas/v3Relation'
    v3GetRelationsResponse:
      type: object
      properties:
        objects:
          type: object
          title: map of materialized relation objects
          additionalProperties:
            has: null
            schema:
              $ref: '#/components/schemas/v3Object'
        page:
          $ref: '#/components/schemas/v3PaginationResponse'
        results:
          type: array
          title: array of relation instances
          items:
            $ref: '#/components/schemas/v3Relation'
    v3ImportCounter:
      type: object
      properties:
        delete:
          type: string
          title: number of messages with OPCODE_DELETE
          format: uint64
        error:
          type: string
          title: number of messages resulting in error
          format: uint64
        recv:
          type: string
          title: number of messages received
          format: uint64
        set:
          type: string
          title: number of messages with OPCODE_SET
          format: uint64
    v3ImportResponse:
      type: object
      properties:
        object:
          $ref: '#/components/schemas/v3ImportCounter'
        relation:
          $ref: '#/components/schemas/v3ImportCounter'
    v3ListManifestsResponse:
      type: object
      properties:
        manifests:
          type: array
          title: manifests metadata
          items:
            $ref: '#/components/schemas/v3Metadata'
        page:
          $ref: '#/components/schemas/v3PaginationResponse'
    v3Metadata:
      type: object
      required:
        - name
        - version
      properties:
        created_at:
          type: string
          title: created at timestamp (UTC)
          format: date-time
          readOnly: true
        etag:
          type: string
          title: object instance etag
        name:
          type: string
          title: manifest name (unique, lc-string)
        updated_at:
          type: string
          title: last updated timestamp (UTC)
          format: date-time
          readOnly: true
        version:
          type: string
          title: manifest version (semver notation)
    v3Object:
      type: object
      required:
        - type
        - id
      properties:
        created_at:
          type: string
          title: created at timestamp (UTC)
          format: date-time
          readOnly: true
        display_name:
          type: string
          title: display name object
        etag:
          type: string
          title: object instance etag
        id:
          type: string
          title: external object identifier (cs-string, no spaces or tabs)
        properties:
          type: object
          title: property bag
        type:
          type: string
          title: object type name
        updated_at:
          type: string
          title: last updated timestamp (UTC)
          format: date-time
          readOnly: true
    v3ObjectDependency:
      type: object
      properties:
        depth:
          type: integer
          title: dependency depth
          format: int32
          readOnly: true
        is_cycle:
          type: boolean
          title: dependency cycle
          readOnly: true
        object_id:
          type: string
          title: object identifier
          readOnly: true
        object_type:
          type: string
          title: object type
          readOnly: true
        path:
          type: array
          title: dependency path
          readOnly: true
          items:
            type: string
        relation:
          type: string
          title: object relation name
          readOnly: true
        subject_id:
          type: string
          title: subject identifier
          readOnly: true
        subject_relation:
          type: string
          title: optional subject relation name
          readOnly: true
        subject_type:
          type: string
          title: subject type
          readOnly: true
    v3ObjectIdentifier:
      type: object
      title: Object identifier
      required:
        - object_type
        - object_id
      properties:
        object_id:
          type: string
          title: object identifier (cs-string)
        object_type:
          type: string
          title: object type (lc-string)
    v3Opcode:
      type: string
      enum:
        - OPCODE_UNKNOWN
        - OPCODE_SET
        - OPCODE_DELETE
      default: OPCODE_UNKNOWN
    v3PaginationRequest:
      type: object
      title: Pagination request
      properties:
        size:
          type: integer
          title: requested page size, valid value between 1-100 rows (default 100)
          format: int32
        token:
          type: string
          title: pagination start token, default ""
    v3PaginationResponse:
      type: object
      title: Pagination response
      properties:
        next_token:
          type: string
          title: next page token, when empty there are no more pages to fetch
          readOnly: true
    v3Relation:
      type: object
      required:
        - object_type
        - object_id
        - relation
        - subject_type
        - subject_id
      properties:
        created_at:
          type: string
          title: created at timestamp (UTC)
          format: date-time
          readOnly: true
        etag:
          type: string
          title: object instance etag
        object_id:
          type: string
          title: object identifier
        object_type:
          type: string
          title: object type
        relation:
          type: string
          title: object relation name
        subject_id:
          type: string
          title: subject identifier
        subject_relation:
          type: string
          title: optional subject relation name
        subject_type:
          type: string
          title: subject type
        updated_at:
          type: string
          title: last updated timestamp (UTC)
          format: date-time
          readOnly: true
    v3SetManifestResponse:
      type: object
      properties:
        result:
          type: object
          title: empty result
    v3SetObjectRequest:
      type: object
      required:
        - object
      properties:
        object:
          $ref: '#/components/schemas/v3Object'
    v3SetObjectResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/v3Object'
    v3SetRelationRequest:
      type: object
      required:
        - relation
      properties:
        relation:
          $ref: '#/components/schemas/v3Relation'
    v3SetRelationResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/v3Relation'
info:
  title: Directory
  description: Directory service
  termsOfService: https://aserto.com/terms/
  contact:
    name: API Support
    url: https://aserto.com/support
    email: support@aserto.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: x.y.z
paths:
  /api/v3/directory/check/permission:
    post:
      tags:
        - directory
      summary: Check permission
      description: Returns check permission outcome.
      operationId: directory.v3.check.permission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v3CheckPermissionRequest'
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3CheckPermissionResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
  /api/v3/directory/check/relation:
    post:
      tags:
        - directory
      summary: Check relation
      description: Returns check relation outcome.
      operationId: directory.v3.check.relation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v3CheckRelationRequest'
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3CheckRelationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
  /api/v3/directory/graph/{anchor_type}/{anchor_id}:
    get:
      tags:
        - directory
      summary: Get graph
      description: Returns object graph from anchor to subject or object.
      operationId: directory.v3.graph
      parameters:
        - name: anchor_type
          in: path
          description: anchor type
          required: true
          schema:
            type: string
        - name: anchor_id
          in: path
          description: anchor identifier
          required: true
          schema:
            type: string
        - name: object_type
          in: query
          description: object type
          schema:
            type: string
        - name: object_id
          in: query
          description: object identifier
          schema:
            type: string
        - name: relation
          in: query
          description: relation name
          schema:
            type: string
        - name: subject_type
          in: query
          description: subject type
          schema:
            type: string
        - name: subject_id
          in: query
          description: subject identifier
          schema:
            type: string
        - name: subject_relation
          in: query
          description: subject relation
          schema:
            type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3GetGraphResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
  /api/v3/directory/manifest/{name}:
    get:
      tags:
        - directory
      summary: Get manifest
      description: Get manifest.
      operationId: directory.v3.manifest.get
      parameters:
        - name: name
          in: path
          description: manifest name (unique, lc-string)
          required: true
          schema:
            type: string
        - name: version
          in: query
          description: manifest version (semver notation), default to latest
          schema:
            type: string
      responses:
        "200":
          description: A successful response.
          headers:
            Aserto-Created-At:
              parameter:
                description: manifest creation time
                schema:
                  type: string
                  format: date-time
            Aserto-Updated-At:
              parameter:
                description: Last modified date
                schema:
                  type: string
                  format: date-time
            ETag:
              parameter:
                description: ETag
                schema:
                  type: string
          content:
            application/yaml:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
  /api/v3/directory/manifest/{name}/{version}:
    delete:
      tags:
        - directory
      summary: Delete manifest
      description: Delete manifest.
      operationId: directory.v3.manifest.delete
      parameters:
        - name: name
          in: path
          description: manifest name (unique, lc-string)
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: manifest version (semver notation)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3DeleteManifestResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
    post:
      tags:
        - directory
      summary: Set manifest
      description: Set manifest.
      operationId: directory.v3.manifest.set
      parameters:
        - name: name
          in: path
          description: manifest name (unique, lc-string)
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: manifest version (semver notation)
          required: true
          schema:
            type: string
      requestBody:
        description: Manifest YAML file
        required: true
        content:
          application/yaml:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: A successful response.
          content:
            application/yaml:
              schema:
                $ref: '#/components/schemas/v3SetManifestResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
  /api/v3/directory/manifests:
    get:
      tags:
        - directory
      summary: List manifests
      description: Returns list of stored manifests.
      operationId: directory.v3.manifests.list
      parameters:
        - name: page.size
          in: query
          description: requested page size, valid value between 1-100 rows (default 100)
          schema:
            type: integer
            format: int32
        - name: page.token
          in: query
          description: pagination start token, default ""
          schema:
            type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3ListManifestsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
  /api/v3/directory/object:
    post:
      tags:
        - directory
      summary: Set object
      description: Set object.
      operationId: directory.v3.object.set
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v3SetObjectRequest'
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3SetObjectResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
  /api/v3/directory/object/{object_type}/{object_id}:
    delete:
      tags:
        - directory
      summary: Delete object
      description: Delete object.
      operationId: directory.v3.object.delete
      parameters:
        - name: object_type
          in: path
          description: object type
          required: true
          schema:
            type: string
        - name: object_id
          in: path
          description: object identifier
          required: true
          schema:
            type: string
        - name: with_relations
          in: query
          description: delete object relations, both object and subject relations.
          schema:
            type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3DeleteObjectResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
    get:
      tags:
        - directory
      summary: Get object instance
      description: Returns single object instance, optionally with relations.
      operationId: directory.v3.object.get
      parameters:
        - name: object_type
          in: path
          description: object type name (lc-string)
          required: true
          schema:
            type: string
        - name: object_id
          in: path
          description: object identifier (cs-string)
          required: true
          schema:
            type: string
        - name: with_relations
          in: query
          description: materialize the object relations objects
          schema:
            type: boolean
        - name: page.size
          in: query
          description: requested page size, valid value between 1-100 rows (default 100)
          schema:
            type: integer
            format: int32
        - name: page.token
          in: query
          description: pagination start token, default ""
          schema:
            type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3GetObjectResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
  /api/v3/directory/objects:
    get:
      tags:
        - directory
      summary: List object instances
      description: Returns list of object instances.
      operationId: directory.v3.objects.list
      parameters:
        - name: object_type
          in: query
          description: object type name (lc-string)
          schema:
            type: string
        - name: page.size
          in: query
          description: requested page size, valid value between 1-100 rows (default 100)
          schema:
            type: integer
            format: int32
        - name: page.token
          in: query
          description: pagination start token, default ""
          schema:
            type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3GetObjectsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
  /api/v3/directory/relation:
    delete:
      tags:
        - directory
      summary: Delete relation
      description: Delete relation.
      operationId: directory.v3.relation.delete
      parameters:
        - name: object_type
          in: query
          description: object type
          required: true
          schema:
            type: string
        - name: object_id
          in: query
          description: object identifier
          required: true
          schema:
            type: string
        - name: relation
          in: query
          description: object relation name
          required: true
          schema:
            type: string
        - name: subject_type
          in: query
          description: subject type
          required: true
          schema:
            type: string
        - name: subject_id
          in: query
          description: subject identifier
          required: true
          schema:
            type: string
        - name: subject_relation
          in: query
          description: optional subject relation name
          schema:
            type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3DeleteRelationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
    get:
      tags:
        - directory
      summary: Get relation instance
      description: Returns single relation instance, optionally with objects.
      operationId: directory.v3.relation.get
      parameters:
        - name: object_type
          in: query
          description: object type
          required: true
          schema:
            type: string
        - name: object_id
          in: query
          description: object identifier
          required: true
          schema:
            type: string
        - name: relation
          in: query
          description: relation name
          required: true
          schema:
            type: string
        - name: subject_type
          in: query
          description: subject type
          required: true
          schema:
            type: string
        - name: subject_id
          in: query
          description: subject identifier
          required: true
          schema:
            type: string
        - name: subject_relation
          in: query
          description: optional subject relation name
          schema:
            type: string
        - name: with_objects
          in: query
          description: materialize relation objects
          schema:
            type: boolean
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3GetRelationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
    post:
      tags:
        - directory
      summary: Set relation
      description: Set relation.
      operationId: directory.v3.relation.set
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v3SetRelationRequest'
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3SetRelationResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
  /api/v3/directory/relations:
    get:
      tags:
        - directory
      summary: List relations instances
      description: Returns list of relation instances.
      operationId: directory.v3.relations.list
      parameters:
        - name: object_type
          in: query
          description: object type
          schema:
            type: string
        - name: object_id
          in: query
          description: object identifier
          schema:
            type: string
        - name: relation
          in: query
          description: relation name
          schema:
            type: string
        - name: subject_type
          in: query
          description: subject type
          schema:
            type: string
        - name: subject_id
          in: query
          description: subject identifier
          schema:
            type: string
        - name: subject_relation
          in: query
          description: optional subject relation name
          schema:
            type: string
        - name: with_objects
          in: query
          description: materialize relation objects
          schema:
            type: boolean
        - name: page.size
          in: query
          description: requested page size, valid value between 1-100 rows (default 100)
          schema:
            type: integer
            format: int32
        - name: page.token
          in: query
          description: pagination start token, default ""
          schema:
            type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v3GetRelationsResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - DirectoryAPIKey: []
          TenantID: []
servers:
  - url: https://directory.prod.aserto.com
    description: Aserto Directory service
  - url: https://localhost:{port}
    description: Local directory service using Topaz
    variables:
      port:
        enum:
          - "8383"
          - "9393"
        default: "9393"
tags:
  - name: Exporter
externalDocs:
  description: API documentation
  url: https://docs.aserto.com
